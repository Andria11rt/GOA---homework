
// const greet = user => `Hello ${name}`

// let userName = prompt("Enter your name: ")


// console.log(greet());



// default parameter - ეს არის საზრიანი პარამეტრი. ჩვენ 
// პარამეტრის მნიშვნელობა იმ დროით, როდესაც გვინდა, რომ 
// პარამეტრი მიეცეს მნიშვნელობა. პარამეტრების 
// მნიშვნელობა მინიჭებულია, ჩვენ ამას დავცავთ იმ შემთხვევისთვის, რომ 
// არ გვისარგებლებია პარამეტრის მითითება.


// Note!: აუცილებელია, რომ დავიცვათ თანმიმდევრობა. ჯერ იწერება
// პარამეტრი, რომელსაც არ აქვს გადაცემული საწყისი პარამეტრი/
// მნიშვნელობა, ხოლო შემდეგ იწერება პარამეტრი, რომელსაც მინიჭებული
// აქვს საწყისი პარამეტრი.


// მაგალითი 1:

// greet ფუნქციაში, ჩვენ შევქმენით user პარამეტრი და მას 
// მივანიჭეთ საზრიანი პარამეტრის მნიშვნელობა. სტანდარტი 
// პარამეტრში მნიშვნელობა არის 'User' და ეს მნიშვნელობა 
// გამოიყენება იმ შემთხვევაში თუ ფუნქციის პარამეტრი 
// არ/არ მიეცა არგუმენტში.

// const greet = (user = "User") => `Hello ${user}!`

// console.log(greet("Andria"));


// მაგალითი 2:

// b პარამეტრს მივანიჭოთ საწყისი მნიშვნელობა 10, თუ b -ს
// არ ექნება გადაცემული არგუმენტი, მაშინ გამოიყენებს 10 -ს,
// ხოლო თუ გადაეცემა არგუმენტი, მაშინ გადაცემული არგუმენტი
// გამოვა კონსოლში.

// const exp1 = (a, b = "You did not input value") => a + " - " + b;

// console.log(exp1(5)); // გამომავალი: 5, "You did not input value"

// console.log(exp1(10, 15)); // გამომავალი: 10, 15


// მაგალითი 3:

// მოცემულ მაგალითში, ჩვენ შევქმნით ორი ფუნქცია, 1.
// extraFunc - 2. exp2.
// ჩვენ შევეცდებით, რომ ფუნქციაში საწყისი პარამეტრით
// გადავცეთ ფუნქცია.

// შევქმნათ ფუნქცია, რომელიც აბრუნებს alert - ს

// const extraFunc = () => alert("This code .....")

// შევქმნათ ფუნქცია, რომელსაც a პარამეტრში გადავცემთ ფუნქცია
// საწყისი პარამეტრად.
// const exp2 = (a = extraFunc()) => a

// console.log(exp2());


// მაგალითი 4:

// const display = (a, b = a + 10) => a + '-' + b;

// console.log(display(5))


// ---------------------------------------------------------------------------------------


// Named Function
// Anynimus Function
// Arrow Function

// Named Function
function greet() {};

// Anonymous Function
let anoFunc = function() {};

// Arrow Function
let arrow = () => {};

const info = (name) => `Hello ${name}`

console.log(info("Andria"));
